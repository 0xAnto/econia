name: Rust CI

on:
  push:
    branches: [ "main" ]
    paths:
      - "src/rust/**"

  pull_request:
    branches: [ "main" ]
    paths:
      - "src/rust/**"

  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  lint-build-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/rust

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"
          ssh-key: ${{ secrets.ECONIA_CI_SSH_PRIVATE_KEY }}

      - uses: rui314/setup-mold@v1

      - uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "rustci"
          shared-key: "ci"

      - uses: actions-rs/cargo@v1
        name: Check formatting
        with:
          command: fmt --check --all-features --all-targets

      - uses: actions-rs/cargo@v1
        name: Install cargo-sort
        with:
          command: install cargo-sort

      - uses: actions-rs/cargo@v1
        name: Check with cargo-sort
        with:
          command: sort --grouped --check --workspace

      - uses: actions-rs/cargo@v1
        name: Check
        with:
          command: check --all-features --all-targets

      - uses: actions-rs/cargo@v1
        name: Clippy
        with:
          command: clippy --all-features --all-targets

      - uses: actions-rs/cargo@v1
        name: Build
        with:
          command: build --all-features --all-targets

      - uses: actions-rs/cargo@v1
        name: Test
        with:
          command: test --all-features --all-targets
