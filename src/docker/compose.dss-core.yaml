version: "3.9"

# The processor is kept in its own template file since it needs to be
# configured differently when running against a local vs public chain.
services:
  aggregator:
    build:
      context: ../../
      dockerfile: src/docker/aggregator/Dockerfile
    depends_on:
      diesel:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    environment:
      APTOS_NETWORK: ${APTOS_NETWORK}
      DATABASE_URL: "postgres://econia:econia@postgres:5432/econia"

  diesel:
    build:
      args:
        DATABASE_URL: "postgres://econia:econia@postgres:5432/econia"
      context: ../../
      dockerfile: src/docker/diesel/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
        restart: true

  grafana_annotations:
    build:
      context: ../../
      dockerfile: src/docker/grafana_annotations/Dockerfile
    depends_on:
      diesel:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: "postgres://econia:econia@postgres:5432/econia"
    volumes:
      - "./grafana_annotations/annotations.csv:/annotations.csv"

  mosquitto:
    image: eclipse-mosquitto:2.0.18-openssl
    ports:
      - "21883:21883"
    volumes:
      - "./mqtt/mosquitto.conf:/mosquitto/config/mosquitto.conf"

  mqtt_publisher:
    build:
      context: ../../
      dockerfile: src/docker/mqtt/Dockerfile.mqtt_publisher
    depends_on:
      mosquitto:
        condition: service_started
      postgres:
        condition: service_healthy
    restart: unless-stopped
    environment:
      DATABASE_URL: "postgres://econia:econia@postgres:5432/econia"
      MQTT_URL: "mqtt://mosquitto:21883?client_id=publisher"

  postgres:
    environment:
      POSTGRES_USER: "econia"
      POSTGRES_PASSWORD: "econia"
    image: postgres:14-bookworm
    ports:
      - "5432:5432"
    volumes:
      - "db:/var/lib/postgresql/data"
    healthcheck:
      test: pg_isready -h localhost -p 5432 -U econia || exit 1
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 15s
      start_interval: 5s

  postgrest:
    depends_on:
      diesel:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    environment:
      PGRST_DB_URI: "postgres://econia:econia@postgres:5432/econia"
      PGRST_DB_ANON_ROLE: web_anon
      PGRST_DB_SCHEMA: api
    image: postgrest/postgrest
    ports:
      - "3000:3000"

  processor:
    build:
      context: ../../
      dockerfile: src/docker/processor/Dockerfile
    environment:
      DATABASE_URL: "postgres://econia:econia@postgres:5432/econia"
      ECONIA_ADDRESS: ${ECONIA_ADDRESS}
      GRPC_AUTH_TOKEN: ${GRPC_AUTH_TOKEN}
      GRPC_DATA_SERVICE_URL: ${GRPC_DATA_SERVICE_URL}
      STARTING_VERSION: ${STARTING_VERSION}
    depends_on:
      diesel:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    ports:
      - "8085:8085"

volumes:
  db:
    driver: local
