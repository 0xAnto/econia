{
  "db_name": "PostgreSQL",
  "query": "INSERT INTO aggregator.daily_rolling_volume_history\n(\"time\", \"market_id\", \"volume_in_quote_subunits\")\nWITH times AS (\n    SELECT\n        DATE_TRUNC('minute', dd) AS time\n    FROM\n        generate_series((SELECT \"time\" FROM fill_events ORDER BY \"time\" LIMIT 1), (SELECT * FROM aggregator.last_time_indexed), '1 minute'::interval) dd\n    WHERE\n        (SELECT * FROM aggregator.daily_rolling_volume_history_last_indexed_timestamp) IS NOT NULL\n    OR\n        dd > (SELECT * FROM aggregator.daily_rolling_volume_history_last_indexed_timestamp)\n)\nSELECT\n    times.\"time\",\n    fill_events.market_id,\n    SUM(fill_events.size * fill_events.price) * market_registration_events.tick_size AS volume_in_quote_subunits\nFROM\n    fill_events,\n    market_registration_events,\n    times\nWHERE\n    fill_events.maker_address = fill_events.emit_address\nAND\n    fill_events.\"time\" BETWEEN (times.\"time\" - '1 day'::interval) AND times.\"time\"\nAND\n    market_registration_events.market_id = fill_events.market_id\nGROUP BY\n    fill_events.market_id,\n    market_registration_events.tick_size,\n    times.\"time\";\n",
  "describe": {
    "columns": [],
    "parameters": {
      "Left": []
    },
    "nullable": []
  },
  "hash": "f9ce1903f028e4e3af5b2d257ee245535e6192254601e6980ab942400eb14c1e"
}
