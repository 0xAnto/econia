{
  "db_name": "PostgreSQL",
  "query": "\n                UPDATE competition_leaderboard_users\n                SET\n                    volume = volume + COALESCE((\n                        WITH relevant_fills AS (\n                            SELECT * FROM fill_events\n                            WHERE NOT EXISTS (\n                                SELECT * FROM competition_indexed_events\n                                WHERE fill_events.txn_version = competition_indexed_events.txn_version\n                                AND fill_events.event_idx = competition_indexed_events.event_idx\n                                AND competition_indexed_events.competition_id = $2\n                            )\n                            AND (maker_address = $1 OR taker_address = $1)\n                            AND time > $3 AND time < $4\n                        )\n                        SELECT SUM(size) FROM relevant_fills\n                    ), 0),\n                    integrators_used = COALESCE((\n                        SELECT array_agg(integrator) AS integrators FROM (\n                            SELECT DISTINCT \"user\", integrator FROM place_limit_order_events\n                            WHERE NOT EXISTS (\n                                SELECT * FROM competition_indexed_events\n                                WHERE place_limit_order_events.txn_version = competition_indexed_events.txn_version\n                                AND place_limit_order_events.event_idx = competition_indexed_events.event_idx\n                                AND competition_indexed_events.competition_id = $2\n                            )\n                            AND time > $3 AND time < $4\n                            UNION\n                            SELECT DISTINCT \"user\", integrator FROM place_market_order_events\n                            WHERE NOT EXISTS (\n                                SELECT * FROM competition_indexed_events\n                                WHERE place_market_order_events.txn_version = competition_indexed_events.txn_version\n                                AND place_market_order_events.event_idx = competition_indexed_events.event_idx\n                                AND competition_indexed_events.competition_id = $2\n                            )\n                            AND time > $3 AND time < $4\n                            UNION\n                            SELECT DISTINCT signing_account as \"user\", integrator FROM place_swap_order_events\n                            WHERE NOT EXISTS (\n                                SELECT * FROM competition_indexed_events\n                                WHERE place_swap_order_events.txn_version = competition_indexed_events.txn_version\n                                AND place_swap_order_events.event_idx = competition_indexed_events.event_idx\n                                AND competition_indexed_events.competition_id = $2\n                            )\n                            AND time > $3 AND time < $4\n                        ) AS a\n                        WHERE integrator IN (SELECT unnest(integrators_required) FROM competition_metadata)\n                        AND \"user\" = $1\n                    ), '{}'::text[]),\n                    n_trades = (\n                        WITH homogenous_fills AS (\n                            SELECT taker_address AS \"user\", taker_order_id AS order_id\n                            FROM fill_events\n                            WHERE time > $3 AND time < $4\n                            UNION\n                            SELECT maker_address AS \"user\", maker_order_id AS order_id\n                            FROM fill_events\n                            WHERE time > $3 AND time < $4\n                        )\n                        SELECT COUNT(order_id) AS orders\n                        FROM homogenous_fills\n                        WHERE \"user\" = $1\n                    )\n                WHERE \"user\" = $1\n            ",
  "describe": {
    "columns": [],
    "parameters": {
      "Left": [
        "Text",
        "Int4",
        "Timestamptz",
        "Timestamptz"
      ]
    },
    "nullable": []
  },
  "hash": "7953f678131a754d828e14b732605e923b7ea10ce23268bfc3a2decd73f8e4f2"
}
